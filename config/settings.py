"""Django settings for config project.

Generated by 'django-admin startproject' using Django 4.1.10.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

# Standard Library
import os
from pathlib import Path

# Third Parties
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env_file = os.path.join(BASE_DIR, ".env")
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
environ.Env.read_env(env_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG")

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Local Apps
    "face_images",
    # 3rd party
    "rest_framework",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": env.db(),
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATIC_URL = "static/"


MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Enable Debug-toolbar
if DEBUG:
    INSTALLED_APPS.append("debug_toolbar")
    MIDDLEWARE.insert(0, "debug_toolbar.middleware.DebugToolbarMiddleware")
    INTERNAL_IPS = ["127.0.0.1"]
    SESSION_COOKIE_AGE = 3600
    """Default: 1209600 (2 weeks), one day, The age of session cookies"""
    SESSION_COOKIE_SECURE = False
    """Default: False, True means the cookie will be marked as "secure", which means browsers may ensure that the cookie is only sent under an HTTPS connection"""
    CSRF_COOKIE_SECURE = False
    """Default: False, True means the cookie will be marked as "secure", which means browsers may ensure that the cookie is only sent with an HTTPS connection."""
    SESSION_COOKIE_HTTPONLY = True
    """Default: True, client-side JavaScript will not be able to access the session cookie."""
else:
    CORS_ALLOWED_ORIGINS = ["https://" + str(url) for url in env.list("ALLOWED_HOSTS")]
    """CORS settings"""
    SESSION_COOKIE_AGE = 3600
    """Default: 1209600 (2 weeks), one day, The age of session cookies"""
    SESSION_COOKIE_SECURE = True
    """Default: False, True means  True means the cookie will be marked as "secure", which means browsers may ensure that the cookie is only sent under an HTTPS connection"""
    CSRF_COOKIE_SECURE = True
    """Default: False, True means the cookie will be marked as "secure", which means browsers may ensure that the cookie is only sent with an HTTPS connection."""
    SECURE_SSL_REDIRECT = env.bool("SECURE_SSL_REDIRECT")
    """Default: False, True means the SecurityMiddleware redirects all non-HTTPS requests to HTTPS"""
    SECURE_CONTENT_TYPE_NOSNIFF = True
    """Default: True, True means the SecurityMiddleware sets the X-Content-Type-Options: nosniff header on all responses that do not already have it."""
    SECURE_BROWSER_XSS_FILTER = True
    """Default: False, True means the SecurityMiddleware sets the X-XSS-Protection: 1; mode=block header on all responses that do not already have it."""
    CSRF_COOKIE_HTTPONLY = True
    """Default: False, True means client-side JavaScript will not be able to access the CSRF cookie. more details please visit:https://docs.djangoproject.com/en/2.2/ref/settings/#csrf-cookie-httponly"""

    # HSTS settings: instructs modern browsers to refuse to connect to your domain name via an insecure connection (for a given period of time)
    SECURE_HSTS_SECONDS = 31536000
    """Default: 0, one year, the SecurityMiddleware sets the HTTP Strict Transport Security header on all responses that do not already have it."""
    SECURE_HSTS_PRELOAD = True
    """Default: False, True means the SecurityMiddleware adds the preload directive to the HTTP Strict Transport Security header."""
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    """Default: False, True means he SecurityMiddleware adds the includeSubDomains directive to the HTTP Strict Transport Security header."""
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
    """Default: None, configure your proxy to set a custom HTTP header that tells Django whether the request came in via HTTPS, and set it with https and return is_secure() with True."""
    X_FRAME_OPTIONS = "DENY"
    SESSION_COOKIE_SAMESITE = "Strict"
